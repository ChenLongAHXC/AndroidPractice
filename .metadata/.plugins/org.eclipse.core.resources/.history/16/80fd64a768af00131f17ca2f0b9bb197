package com.chenlong.xml;

import java.util.ArrayList;
import java.util.List;

import org.xml.sax.Attributes;
import org.xml.sax.SAXException;
import org.xml.sax.helpers.DefaultHandler;

import com.chenlong.model.Mp3Model;

public class XMLParser extends DefaultHandler{

	private List<Mp3Model> models;
	
	private Mp3Model model;
	
	private String tagName;
	
	public XMLParser(List<Mp3Model> models) {
		super();
		this.models = models;
	}

	public List<Mp3Model> getModels() {
		return models;
	}

	public void setModels(List<Mp3Model> models) {
		this.models = models;
	}

	@Override
	public void characters(char[] ch, int start, int length)
			throws SAXException {
		String temp=new String(ch,start,length);
		if("id".equals(tagName)){
			model.setId(temp);
		}else if("mp3.name".equals(tagName)){
			model.setMp3Name(temp);
		}else if("mp3.size".equals(tagName)){
			model.setMp3Size(temp);
		}else if("lrc.name".equals(tagName)){
			model.setLrcName(temp);
		}else if("lrc.size".equals(tagName)){
			model.setLrcSize(temp);
		}
	}

	@Override
	public void endDocument() throws SAXException {
		// TODO Auto-generated method stub
		super.endDocument();
	}

	@Override
	public void endElement(String uri, String localName, String qName)
			throws SAXException {
		if("resource".equals(qName)){
			models.add(model);
		}
	}

	@Override
	public void startDocument() throws SAXException {
		// TODO Auto-generated method stub
		super.startDocument();
	}

	@Override
	public void startElement(String uri, String localName, String qName,
			Attributes attributes) throws SAXException {
		this.tagName=localName;
		if("resource".equals(tagName)){
			model=new Mp3Model();
		}
		
	}

}
